{"version":3,"sources":["firebase.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","App","useState","todos","setTodos","todo","setTodo","author","setAuthor","edito","setEdito","clasif","setClasif","modoEdicion","setModoEdicion","id","setId","getTodos","a","collection","get","data","resultado","docs","map","doc","console","log","useEffect","agregarTodo","e","preventDefault","trim","add","name","aut","edi","clas","firebaseTodo","nuevoTodoObject","editarTodo","update","arregloEditado","item","eliminarTodo","delete","filtro","filter","className","onSubmit","type","value","onChange","target","placeholder","onClick","activarEdicion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c342308f.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyD44tEhjsjDU0IbPz6rlX-To4G9x9OMHc0\",\r\n  authDomain: \"react-firebase-d66bc.firebaseapp.com\",\r\n  databaseURL: \"https://react-firebase-d66bc.firebaseio.com\",\r\n  projectId: \"react-firebase-d66bc\",\r\n  storageBucket: \"react-firebase-d66bc.appspot.com\",\r\n  messagingSenderId: \"1050184707652\",\r\n  appId: \"1:1050184707652:web:e279db735e2df2d0f0d611\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n  export const db = firebase.firestore();\r\n","import { useState, useEffect } from 'react'\nimport { db } from './firebase.js'\n\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [todo, setTodo] = useState('')\n  const [author, setAuthor] = useState('')\n  const [edito, setEdito] = useState('')\n  const [clasif, setClasif] = useState('')\n  const [modoEdicion, setModoEdicion] = useState(false)\n  const [id, setId] = useState('')\n\n  const getTodos = async () => {\n    const data = await db.collection('todos').get()\n    const resultado = data.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n    setTodos(resultado)\n    console.log(resultado)\n  }\n\n\n  useEffect(() => {\n    getTodos()\n  }, [])\n\n  const agregarTodo = async (e) => {\n    e.preventDefault()\n    if (!todo.trim()) {\n      console.log('campo vacio')\n      return\n    }\n    if (!author.trim()) {\n      console.log('campo vacio')\n      return\n    }\n    if (!edito.trim()) {\n      console.log('campo vacio')\n      return\n    }\n    if (!clasif.trim()) {\n      console.log('campo vacio')\n      return\n    }\n\n    const firebaseTodo = await db.collection('todos').add({\n      name: todo,\n      aut: author,\n      edi: edito,\n      clas: clasif,\n    })\n\n    const nuevoTodoObject = {\n      name: todo,\n      aut: author,\n      edi: edito,\n      clas: clasif,\n    }\n\n    setTodos([...todos, { id: firebaseTodo.id, ...nuevoTodoObject }])\n    setTodo('')\n    setAuthor('')\n    setEdito('')\n    setClasif('')\n\n  }\n\n  const activarEdicion = (item) => {\n    setModoEdicion(true)\n    setTodo(item.name)\n    setAuthor(item.aut)\n    setEdito(item.edi)\n    setClasif(item.clas)\n    setId(item.id)\n  }\n\n\n  const editarTodo = async (e) => {\n    e.preventDefault()\n    await db.collection('todos').doc(id).update({\n      name: todo,\n      aut: author,\n      edi: edito,\n      clas: clasif,\n    })\n    const arregloEditado = todos.map(item => (\n      item.id === id ? { id: item.id, name: todo } : item,\n      item.id === id ? { id: item.id, aut: author } : item,\n      item.id === id ? { id: item.id, edi: edito } : item,\n      item.id === id ? { id: item.id, clas: clasif } : item\n    ))\n    setTodos(arregloEditado)\n    setModoEdicion(false)\n    setId('')\n    setTodo('')\n    setAuthor('')\n    setEdito('')\n    setClasif('')\n\n  }\n\n\n  const eliminarTodo = async (id) => {\n    await db.collection('todos').doc(id).delete()\n    const filtro = todos.filter(item => item.id !== id)\n    setTodos(filtro)\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h1>Biblioteca de Libros</h1>\n      <h2>\n        {\n          modoEdicion ? 'Editar Libro' : 'Agregar Libro'\n        }\n      </h2>\n      <form onSubmit={modoEdicion ? editarTodo : agregarTodo}>\n        <div className=\"form-group\">\n          <label>Titulo</label>\n          <input type=\"text\" className=\"form-control\" value={todo} onChange={e => setTodo(e.target.value)} placeholder=\"Ej. Resident Evil, la conspiracion umbrella\" />\n          <label>Autor</label>\n          <input type=\"text\" className=\"form-control\" value={author} onChange={e => setAuthor(e.target.value)} placeholder=\"Ej. S.D.Perry\" />\n          <label>Editorial</label>\n          <input type=\"text\" className=\"form-control\" value={edito} onChange={e => setEdito(e.target.value)} placeholder=\"Ej. Titunmas\" />\n          <label>Clasificacion</label>\n          <input type=\"text\" className=\"form-control\" value={clasif} onChange={e => setClasif(e.target.value)} placeholder=\"Ej. Horror\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\">{modoEdicion ? 'Editar' : 'Agregar'}</button>\n      </form>\n\n      <ul className=\"list-group\">\n        {\n          todos.map(item => (\n            <li className=\"list-group-item\" key={item.id}>\n              <span>Titulo: {item.name} ||\n                  Autor: {item.aut} ||\n                  Editorial: {item.edi} ||\n                  Clasificacion: {item.clas} ||\n                  ID: {item.id}</span>\n              <button\n                className=\"btn btn-danger btn-sm float-right\"\n                onClick={() => eliminarTodo(item.id)}\n              >Eliminar</button>\n              <button className=\"btn btn-warning btn-sm float-right mr-2\"\n                onClick={() => activarEdicion(item)}>Editar</button>\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}